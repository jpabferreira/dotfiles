
#
#
#
#
#
#
# #See https://github.com/jannis-baum/fzf-dotfiles/blob/main/fzf.zsh
#
# has_cmd() { command -v "$1" >/dev/null 2>&1 ; }
#
# MIME="$(file -bL --mime-type "$1")"
# CATEGORY="${MIME%%/*}"
# KIND="${MIME##*/}"
#
# if [[ -d "$1" ]]; then
#     has_cmd exa && exa -a --color=always -l -g --git --group-directories-first --icons "$1"
#     has_cmd lsd && lsd -al --color=always --icon=always "$1"
# elif [[ "$CATEGORY" == "image" ]]; then
#     has_cmd chafa && chafa "$1"
#     has_cmd exiftool && exiftool "$1"
# elif [[ "$CATEGORY" == "text" ]]; then
#     has_cmd bat && bat --color=always --line-range :200 "$1"
# elif [[ "$CATEGORY" == "video" ]]; then
#     has_cmd mediainfo && mediainfo "$1"
# else
#     lesspipe.sh "$1" | bat --color=always --line-range :200
# fi
#
#
#
# export FZF_DEFAULT_OPTS="
# -i
# --ansi
# --border=rounded
# --border-label-pos=top
# --color=dark
# --cycle
# --layout=reverse
# --header-first
# --info=inline-right
# --height=40%
# --margin=1,1%
# --preview='
#   ([[ {} == *.pdf ]] && pdftotext {} -) || 
#   ([[ {} == *.tar.gz || {} ==  *.tgz || {} ==  *.tar.bz || {} ==  *.tbz || {} ==  *.tar.bz2 || {} ==  *.tbz2 || {} ==  *.tar.Z || {} ==  *.tZ || {} ==  *.tar.lzo || {} ==  *.tzo || {} ==  *.tar.lz || {} ==  *.tlz || {} ==  *.tar.xz || {} ==  *.txz || {} ==  *.tar.7z || {} ==  *.t7z || {} ==  *.tar || {} ==  *.zip || {} ==  *.jar || {} ==  *.war || {} ==  *.rar || {} ==  *.lha || {} ==  *.lzh || {} ==  *.7z || {} ==  *.alz || {} ==  *.ace || {} ==  *.a || {} ==  *.arj || {} ==  *.arc || {} ==  *.rpm || {} ==  *.deb || {} ==  *.cab || {} ==  *.gz || {} ==  *.bz || {} ==  *.bz2 || {} ==  *.Z || {} ==  *.lzma || {} ==  *.lzo || {} ==  *.lz || {} ==  *.xz || {} ==  *.rz || {} ==  *.lrz || {} ==  *.7z || {} ==  *.cpio ]] && (als {} 2>/dev/null )) ||
#   ([[ {} == *jpg || {} ==  *.jpeg || {} ==  *.png || {} ==  *.bmp || {} ==  *.gif ]] && (kitty +kitten icat )) ||
#   ([[ -f {} ]] && (bat --style=numbers --color=always {})) || 
#   ([[ -d {} ]] && (lsd --icon=always --color=always {} | less)) || 
#   echo {} 2>/dev/null | head -n 200'--color='hl:148,hl+:154,pointer:032,marker:010,bg+:237,gutter:008'
# --prompt=' '
# --pointer=' '
# --marker='✓'
# --bind '?:toggle-preview'
# --bind 'ctrl-a:select-all'
# --bind 'ctrl-e:execute(nvim {+} >/dev/tty)'
# --bind='ctrl-u:preview-page-up'
# --bind='ctrl-d:preview-page-down'"
#
#
#
#
#
#
#
#
#
#
#
#!/usr/bin/sh
# if [ -f /usr/share/fzf/completion.zsh ]; then
#     source /usr/share/fzf/completion.zsh
# fi
#
#
# # Default: non-fuzzy search
# export FZF_DEFAULT_OPTS='
#   -e
#   --color fg:252,bg:233,hl:67,fg+:252,bg+:235,hl+:81
#   --color info:144,prompt:161,spinner:135,pointer:135,marker:118
#   '
#
# # If ag is available
# if command -v ag >/dev/null 2>&1; then
#   export FZF_DEFAULT_COMMAND='ag -l --hidden -g ""'
# fi
#
# # fe [FUZZY PATTERN] - Open the selected file with the default editor
# #   - Bypass fuzzy finder if there's only one match (--select-1)
# #   - Exit if there's no match (--exit-0)
# fe() {
#   local file
#   file=$(fzf --query="$1" --select-1 --exit-0)
#   [ -n "$file" ] && ${EDITOR:-vim} "$file"
# }
#
# # Modified version where you can press
# #   - CTRL-O or Enter key to open with `open` command,
# #   - CTRL-E to open with the $EDITOR
# fo() {
#   local out file key
#   out=$(fzf-tmux --query="$1" --exit-0 --expect=ctrl-o,ctrl-e)
#   key=$(head -1 <<< "$out")
#   file=$(head -2 <<< "$out" | tail -1)
#   if [ -n "$file" ]; then
#     [ "$key" = ctrl-e ] && ${EDITOR:-vim} "$file" || xdg-open "$file"&
#   fi
# }
#
# # fshow - git commit browser
# fshow() {
#   git rev-parse --git-dir > /dev/null 2>&1
#   if [ $? -ne 0 ]; then
#     return
#   fi
#
#   local out sha q
#   while out=$(
#       git log --decorate=short --graph --oneline --color=always |
#       fzf-tmux --ansi --multi --no-sort --reverse --query=$q --print-query); do
#     q=$(head -1 <<< "$out")
#     while read sha; do
#       [ -n "$sha" ] && git show --color=always $sha | less -R
#     done < <(sed '1d;s/^[^a-z0-9]*//;/^$/d' <<< "$out" | awk '{print $1}')
#   done
# }
#
# # fs [FUZZY PATTERN] - Select selected tmux session
# #   - Bypass fuzzy finder if there's only one match (--select-1)
# #   - Exit if there's no match (--exit-0)
# fs() {
#   local session
#   session=$(tmux list-sessions -F "#{session_name}" | \
#     fzf-tmux --query="$1" --select-1 --exit-0) &&
#   tmux switch-client -t "$session"
# }
#
# # fh - repeat history, toggle sort with ctrl-r
# fh() {
#   print -z $( ([ -n "$ZSH_NAME" ] && fc -l 1 || history) | fzf-tmux +s -e --tac --toggle-sort=ctrl-r | sed 's/ *[0-9]*[\*]* *//')
#   zle accept-line
# }
#
# # Override C-R
# zle -N fh
# bindkey '^r' fh
#
# # TODO: check if still required
# unalias j &>/dev/null
# j() {
#   if ! command -v zoxide >/dev/null 2>&1; then
#     return
#   fi
#
#   if [[ -z "$*" ]]; then
#     zi
#   else
#     z "$@"
#   fi
# }
#
# fmpc() {
#   local song_position
#   song_position=$(mpc -f "%position%) %artist% - %title%" playlist | \
#     fzf-tmux --query="$1" --reverse --select-1 --exit-0 | \
#     sed -n 's/^\([0-9]\+\)).*/\1/p') || return 1
#   [ -n "$song_position" ] && mpc -q play $song_position
# }
